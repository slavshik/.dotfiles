typeset -g POWERLEVEL9K_INSTANT_PROMPT=quiet
eval "$(zoxide init zsh)" #autojump replacement
# eval "$(starship init zsh)"
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

export ZSH="$HOME/.oh-my-zsh"
export EDITOR="nvim"
ZSH_THEME="powerlevel10k/powerlevel10k"

plugins=(
    git 
    zsh-autosuggestions
)
#run this to install autosuggestions 
#git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
source $ZSH/oh-my-zsh.sh

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
# export PATH="~/.dotfiles/bin:$PATH"
export PATH="$PATH:/Users/$(whoami)/Library/Python/3.9/bin"
export PATH="$PATH:/Users/$(whoami)/go/bin"
bindkey -v #enable vim support
GITSTATUS_LOG_LEVEL=DEBUG

LFCD=~/.dotfiles/lf/lfcd.sh
if [ -f "$LFCD" ]; then
    source "$LFCD"
fi
EVO=~/.dotfiles/evolution/index.zsh
if [ -f "$EVO" ]; then
    source "$EVO"
fi
source ~/.dotfiles/zsh/aliases.zsh
source ~/.dotfiles/zsh/keybindings.zsh

function dta() {
    git tag --delete $1
    git push --delete origin $1
}

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_CTRL_R_OPTS="--reverse"
export FZF_TMUX_OPTS="-p"
# tmuxifier
export PATH="$HOME/.tmuxifier/bin:$PATH"
eval "$(tmuxifier init -)"

# ------------------------------------------------------------
# LASTFM
export LFM_TOKEN=df8d8fcb8f4c7aa23fc404897c7d6a2b
lfm_tag() {
    curl http://ws.audioscrobbler.com/2.0/\?method\=tag.getinfo\&tag\=$1\&api_key\=$LFM_TOKEN\&format\=json --silent | jq .tag.wiki.summary
}
lfm_tag_similar() {
    curl http://ws.audioscrobbler.com/2.0/\?method\=tag.getsimilar\&tag\=$1\&api_key\=$LFM_TOKEN\&format\=json --silent | jq
}

# bun completions
[ -s "/Users/slavshik/.bun/_bun" ] && source "/Users/slavshik/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

eval "$(fnm env --use-on-cd --shell zsh)"

# >>> JVM installed by coursier >>>
export JAVA_HOME="/Users/slavshik/Library/Caches/Coursier/arc/https/github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.24%252B8/OpenJDK11U-jdk_x64_mac_hotspot_11.0.24_8.tar.gz/jdk-11.0.24+8/Contents/Home"
# <<< JVM installed by coursier <<<

# >>> coursier install directory >>>
export PATH="$PATH:/Users/slavshik/Library/Application Support/Coursier/bin"
# <<< coursier install directory <<<

export PATH="$PATH:/Users/slavshik/Documents/dev/flutter/bin"

# fnm
FNM_PATH="/Users/slavshik/Library/Application Support/fnm"
if [ -d "$FNM_PATH" ]; then
  export PATH="/Users/slavshik/Library/Application Support/fnm:$PATH"
  eval "`fnm env`"
fi

eval "$(fnm env --use-on-cd --version-file-strategy=recursive)"
POWERLEVEL9K_INSTANT_PROMPT=quiet #disable errors
export PATH="$PATH:/Users/slavshik/Documents/dev/emsdk"
export PATH="$PATH:/Users/slavshik/Documents/dev/emsdk/upstream/emscripten"
